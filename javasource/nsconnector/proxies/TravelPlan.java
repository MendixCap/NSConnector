// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package nsconnector.proxies;

public class TravelPlan
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject travelPlanMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "NSConnector.TravelPlan";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Successful("Successful"),
		ResponseMessage("ResponseMessage"),
		DepartureStation("DepartureStation"),
		ArrivalStation("ArrivalStation");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TravelPlan(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "NSConnector.TravelPlan"));
	}

	protected TravelPlan(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject travelPlanMendixObject)
	{
		if (travelPlanMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("NSConnector.TravelPlan", travelPlanMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a NSConnector.TravelPlan");

		this.travelPlanMendixObject = travelPlanMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TravelPlan.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static nsconnector.proxies.TravelPlan initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return nsconnector.proxies.TravelPlan.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static nsconnector.proxies.TravelPlan initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new nsconnector.proxies.TravelPlan(context, mendixObject);
	}

	public static nsconnector.proxies.TravelPlan load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return nsconnector.proxies.TravelPlan.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Successful
	 */
	public final Boolean getSuccessful()
	{
		return getSuccessful(getContext());
	}

	/**
	 * @param context
	 * @return value of Successful
	 */
	public final Boolean getSuccessful(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (Boolean) getMendixObject().getValue(context, MemberNames.Successful.toString());
	}

	/**
	 * Set value of Successful
	 * @param successful
	 */
	public final void setSuccessful(Boolean successful)
	{
		setSuccessful(getContext(), successful);
	}

	/**
	 * Set value of Successful
	 * @param context
	 * @param successful
	 */
	public final void setSuccessful(com.mendix.systemwideinterfaces.core.IContext context, Boolean successful)
	{
		getMendixObject().setValue(context, MemberNames.Successful.toString(), successful);
	}

	/**
	 * @return value of ResponseMessage
	 */
	public final String getResponseMessage()
	{
		return getResponseMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of ResponseMessage
	 */
	public final String getResponseMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ResponseMessage.toString());
	}

	/**
	 * Set value of ResponseMessage
	 * @param responsemessage
	 */
	public final void setResponseMessage(String responsemessage)
	{
		setResponseMessage(getContext(), responsemessage);
	}

	/**
	 * Set value of ResponseMessage
	 * @param context
	 * @param responsemessage
	 */
	public final void setResponseMessage(com.mendix.systemwideinterfaces.core.IContext context, String responsemessage)
	{
		getMendixObject().setValue(context, MemberNames.ResponseMessage.toString(), responsemessage);
	}

	/**
	 * @return value of DepartureStation
	 */
	public final String getDepartureStation()
	{
		return getDepartureStation(getContext());
	}

	/**
	 * @param context
	 * @return value of DepartureStation
	 */
	public final String getDepartureStation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.DepartureStation.toString());
	}

	/**
	 * Set value of DepartureStation
	 * @param departurestation
	 */
	public final void setDepartureStation(String departurestation)
	{
		setDepartureStation(getContext(), departurestation);
	}

	/**
	 * Set value of DepartureStation
	 * @param context
	 * @param departurestation
	 */
	public final void setDepartureStation(com.mendix.systemwideinterfaces.core.IContext context, String departurestation)
	{
		getMendixObject().setValue(context, MemberNames.DepartureStation.toString(), departurestation);
	}

	/**
	 * @return value of ArrivalStation
	 */
	public final String getArrivalStation()
	{
		return getArrivalStation(getContext());
	}

	/**
	 * @param context
	 * @return value of ArrivalStation
	 */
	public final String getArrivalStation(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ArrivalStation.toString());
	}

	/**
	 * Set value of ArrivalStation
	 * @param arrivalstation
	 */
	public final void setArrivalStation(String arrivalstation)
	{
		setArrivalStation(getContext(), arrivalstation);
	}

	/**
	 * Set value of ArrivalStation
	 * @param context
	 * @param arrivalstation
	 */
	public final void setArrivalStation(com.mendix.systemwideinterfaces.core.IContext context, String arrivalstation)
	{
		getMendixObject().setValue(context, MemberNames.ArrivalStation.toString(), arrivalstation);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return travelPlanMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final nsconnector.proxies.TravelPlan that = (nsconnector.proxies.TravelPlan) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "NSConnector.TravelPlan";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
