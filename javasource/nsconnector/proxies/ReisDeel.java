// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package nsconnector.proxies;

/**
 * Section of travel, contains one or more stops.
 */
public class ReisDeel
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject reisDeelMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "NSConnector.ReisDeel";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Vervoerder("Vervoerder"),
		VervoerType("VervoerType"),
		Status("Status"),
		ReisDeel_ReisMogelijkheid("NSConnector.ReisDeel_ReisMogelijkheid");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ReisDeel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "NSConnector.ReisDeel"));
	}

	protected ReisDeel(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject reisDeelMendixObject)
	{
		if (reisDeelMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("NSConnector.ReisDeel", reisDeelMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a NSConnector.ReisDeel");

		this.reisDeelMendixObject = reisDeelMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ReisDeel.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static nsconnector.proxies.ReisDeel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return nsconnector.proxies.ReisDeel.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static nsconnector.proxies.ReisDeel initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new nsconnector.proxies.ReisDeel(context, mendixObject);
	}

	public static nsconnector.proxies.ReisDeel load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return nsconnector.proxies.ReisDeel.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Vervoerder
	 */
	public final String getVervoerder()
	{
		return getVervoerder(getContext());
	}

	/**
	 * @param context
	 * @return value of Vervoerder
	 */
	public final String getVervoerder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Vervoerder.toString());
	}

	/**
	 * Set value of Vervoerder
	 * @param vervoerder
	 */
	public final void setVervoerder(String vervoerder)
	{
		setVervoerder(getContext(), vervoerder);
	}

	/**
	 * Set value of Vervoerder
	 * @param context
	 * @param vervoerder
	 */
	public final void setVervoerder(com.mendix.systemwideinterfaces.core.IContext context, String vervoerder)
	{
		getMendixObject().setValue(context, MemberNames.Vervoerder.toString(), vervoerder);
	}

	/**
	 * @return value of VervoerType
	 */
	public final String getVervoerType()
	{
		return getVervoerType(getContext());
	}

	/**
	 * @param context
	 * @return value of VervoerType
	 */
	public final String getVervoerType(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.VervoerType.toString());
	}

	/**
	 * Set value of VervoerType
	 * @param vervoertype
	 */
	public final void setVervoerType(String vervoertype)
	{
		setVervoerType(getContext(), vervoertype);
	}

	/**
	 * Set value of VervoerType
	 * @param context
	 * @param vervoertype
	 */
	public final void setVervoerType(com.mendix.systemwideinterfaces.core.IContext context, String vervoertype)
	{
		getMendixObject().setValue(context, MemberNames.VervoerType.toString(), vervoertype);
	}

	/**
	 * @return value of Status
	 */
	public final String getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final String getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Status.toString());
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(String status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, String status)
	{
		getMendixObject().setValue(context, MemberNames.Status.toString(), status);
	}

	/**
	 * @return value of ReisDeel_ReisMogelijkheid
	 */
	public final nsconnector.proxies.ReisMogelijkheid getReisDeel_ReisMogelijkheid() throws com.mendix.core.CoreException
	{
		return getReisDeel_ReisMogelijkheid(getContext());
	}

	/**
	 * @param context
	 * @return value of ReisDeel_ReisMogelijkheid
	 */
	public final nsconnector.proxies.ReisMogelijkheid getReisDeel_ReisMogelijkheid(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nsconnector.proxies.ReisMogelijkheid result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ReisDeel_ReisMogelijkheid.toString());
		if (identifier != null)
			result = nsconnector.proxies.ReisMogelijkheid.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ReisDeel_ReisMogelijkheid
	 * @param reisdeel_reismogelijkheid
	 */
	public final void setReisDeel_ReisMogelijkheid(nsconnector.proxies.ReisMogelijkheid reisdeel_reismogelijkheid)
	{
		setReisDeel_ReisMogelijkheid(getContext(), reisdeel_reismogelijkheid);
	}

	/**
	 * Set value of ReisDeel_ReisMogelijkheid
	 * @param context
	 * @param reisdeel_reismogelijkheid
	 */
	public final void setReisDeel_ReisMogelijkheid(com.mendix.systemwideinterfaces.core.IContext context, nsconnector.proxies.ReisMogelijkheid reisdeel_reismogelijkheid)
	{
		if (reisdeel_reismogelijkheid == null)
			getMendixObject().setValue(context, MemberNames.ReisDeel_ReisMogelijkheid.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ReisDeel_ReisMogelijkheid.toString(), reisdeel_reismogelijkheid.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return reisDeelMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final nsconnector.proxies.ReisDeel that = (nsconnector.proxies.ReisDeel) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "NSConnector.ReisDeel";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
