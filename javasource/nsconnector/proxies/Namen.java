// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package nsconnector.proxies;

public class Namen
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject namenMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "NSConnector.Namen";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Kort("Kort"),
		Middel("Middel"),
		Lang("Lang"),
		Namen_Station("NSConnector.Namen_Station");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Namen(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "NSConnector.Namen"));
	}

	protected Namen(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject namenMendixObject)
	{
		if (namenMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("NSConnector.Namen", namenMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a NSConnector.Namen");

		this.namenMendixObject = namenMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Namen.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static nsconnector.proxies.Namen initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return nsconnector.proxies.Namen.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static nsconnector.proxies.Namen initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new nsconnector.proxies.Namen(context, mendixObject);
	}

	public static nsconnector.proxies.Namen load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return nsconnector.proxies.Namen.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Kort
	 */
	public final String getKort()
	{
		return getKort(getContext());
	}

	/**
	 * @param context
	 * @return value of Kort
	 */
	public final String getKort(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Kort.toString());
	}

	/**
	 * Set value of Kort
	 * @param kort
	 */
	public final void setKort(String kort)
	{
		setKort(getContext(), kort);
	}

	/**
	 * Set value of Kort
	 * @param context
	 * @param kort
	 */
	public final void setKort(com.mendix.systemwideinterfaces.core.IContext context, String kort)
	{
		getMendixObject().setValue(context, MemberNames.Kort.toString(), kort);
	}

	/**
	 * @return value of Middel
	 */
	public final String getMiddel()
	{
		return getMiddel(getContext());
	}

	/**
	 * @param context
	 * @return value of Middel
	 */
	public final String getMiddel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Middel.toString());
	}

	/**
	 * Set value of Middel
	 * @param middel
	 */
	public final void setMiddel(String middel)
	{
		setMiddel(getContext(), middel);
	}

	/**
	 * Set value of Middel
	 * @param context
	 * @param middel
	 */
	public final void setMiddel(com.mendix.systemwideinterfaces.core.IContext context, String middel)
	{
		getMendixObject().setValue(context, MemberNames.Middel.toString(), middel);
	}

	/**
	 * @return value of Lang
	 */
	public final String getLang()
	{
		return getLang(getContext());
	}

	/**
	 * @param context
	 * @return value of Lang
	 */
	public final String getLang(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Lang.toString());
	}

	/**
	 * Set value of Lang
	 * @param lang
	 */
	public final void setLang(String lang)
	{
		setLang(getContext(), lang);
	}

	/**
	 * Set value of Lang
	 * @param context
	 * @param lang
	 */
	public final void setLang(com.mendix.systemwideinterfaces.core.IContext context, String lang)
	{
		getMendixObject().setValue(context, MemberNames.Lang.toString(), lang);
	}

	/**
	 * @return value of Namen_Station
	 */
	public final nsconnector.proxies.Station getNamen_Station() throws com.mendix.core.CoreException
	{
		return getNamen_Station(getContext());
	}

	/**
	 * @param context
	 * @return value of Namen_Station
	 */
	public final nsconnector.proxies.Station getNamen_Station(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		nsconnector.proxies.Station result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Namen_Station.toString());
		if (identifier != null)
			result = nsconnector.proxies.Station.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Namen_Station
	 * @param namen_station
	 */
	public final void setNamen_Station(nsconnector.proxies.Station namen_station)
	{
		setNamen_Station(getContext(), namen_station);
	}

	/**
	 * Set value of Namen_Station
	 * @param context
	 * @param namen_station
	 */
	public final void setNamen_Station(com.mendix.systemwideinterfaces.core.IContext context, nsconnector.proxies.Station namen_station)
	{
		if (namen_station == null)
			getMendixObject().setValue(context, MemberNames.Namen_Station.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Namen_Station.toString(), namen_station.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return namenMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final nsconnector.proxies.Namen that = (nsconnector.proxies.Namen) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "NSConnector.Namen";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
